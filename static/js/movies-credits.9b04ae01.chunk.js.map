{"version":3,"file":"static/js/movies-credits.9b04ae01.chunk.js","mappings":"qPAEaA,EAAiBC,EAAAA,GAAAA,IAAH,+CAIdC,EAAiBD,EAAAA,GAAAA,EAAH,+DAKdE,EAAcF,EAAAA,GAAAA,GAAH,4CAIXG,EAAQH,EAAAA,GAAAA,IAAH,+DAKLI,EAAOJ,EAAAA,GAAAA,GAAH,qEAKJK,EAAUL,EAAAA,GAAAA,IAAH,oFAMPM,EAAON,EAAAA,GAAAA,GAAH,iX,SCKjB,EAzByB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KAC1B,OACE,SAACD,EAAD,UACGC,EAAKC,KAAI,SAACC,GAAD,OACR,SAACL,EAAD,WACE,UAACC,EAAD,YACE,SAACF,EAAD,CACEO,IACED,EAAGE,aAAH,8CAC2CF,EAAGE,cAD9C,wEAIFC,IAAI,kBAEN,UAACb,EAAD,YACE,SAACG,EAAD,UAAcO,EAAGI,QACjB,UAACZ,EAAD,yBAA4BQ,EAAGK,oBAZ1BL,EAAGM,U,oBCWtB,EApBqB,WACnB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BN,EAAOD,IAC/BQ,MAAK,SAAChB,GACLiB,EAAAA,QAAAA,OAAe,CACbC,SAAU,YAEZL,EAAUb,MAEXmB,SAAQ,WACPF,EAAAA,QAAAA,cAEH,CAACR,EAAOD,MAEJ,8BAAGI,IAAU,SAAC,EAAD,CAAkBZ,KAAMY,Q,0MCrBxCQ,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAASvB,KAAKwB,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,uFACkBJ,IAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAASvB,KAAKwB,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBN,IAAAA,IAAA,iBACXM,EADW,6DADlB,cACCL,EADD,yBAIEA,EAASvB,MAJX,kEAOA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBN,IAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASvB,KAAKwB,SALhB,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBN,IAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASvB,KAAK+B,MALhB,kEA/BPT,IAAAA,SAAAA,QAAyB","sources":["components/MovieCredits/MovieCreditsCard/MovieCreditsCard.styled.jsx","components/MovieCredits/MovieCreditsCard/MovieCreditsCard.jsx","components/MovieCredits/MovieCredits.jsx","services/fecthMovies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerTitle = styled.div`\n  text-align: center;\n`;\n\nexport const PreTitleActors = styled.p`\n  font-size: 16px;\n  color: #ff6b01;\n`;\n\nexport const TitleActors = styled.h2`\n  font-size: 20px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n`;\n\nexport const Item = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  color: #fff;\n  background-color: #000;\n`;\n\nexport const List = styled.ul`\n  padding: 10px;\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n  list-style: none;\n\n  @media screen and (min-width: 768px) and (max-width: 1024px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: repeat(6, 1fr);\n  }\n`;\n","import {\n  ContainerTitle,\n  PreTitleActors,\n  TitleActors,\n  Image,\n  List,\n  Item,\n  Wrapper,\n} from \"./MovieCreditsCard.styled\";\nimport PropTypes from \"prop-types\";\n\nconst MovieCreditsCard = ({ data }) => {\n  return (\n    <List>\n      {data.map((el) => (\n        <Item key={el.id}>\n          <Wrapper>\n            <Image\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/original/${el.profile_path}`\n                  : `https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png`\n              }\n              alt=\"Photo Actors\"\n            />\n            <ContainerTitle>\n              <TitleActors>{el.name}</TitleActors>\n              <PreTitleActors>Character: {el.character}</PreTitleActors>\n            </ContainerTitle>\n          </Wrapper>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieCreditsCard;\n\nMovieCreditsCard.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieCreditsCard from \"./MovieCreditsCard\";\nimport * as FetchAPI from \"../../services/fecthMovies\";\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\n\nconst MovieCredits = () => {\n  const params = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    FetchAPI.fetchMovieCredits(params.id)\n      .then((data) => {\n        Loading.circle({\n          svgColor: \"#ff6b01\",\n        });\n        setActors(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [params.id]);\n\n  return <>{actors && <MovieCreditsCard data={actors} />}</>;\n};\n\nexport default MovieCredits;\n","import axios from \"axios\";\n\nconst API_KEY = \"cd00d8c55831cbeec8ccdad1db16d6d2\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchPopularFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n\nexport async function fetchSearchFilmByName(filmName) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchFilmInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=cd00d8c55831cbeec8ccdad1db16d6d2&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n"],"names":["ContainerTitle","styled","PreTitleActors","TitleActors","Image","Item","Wrapper","List","data","map","el","src","profile_path","alt","name","character","id","params","useParams","useState","actors","setActors","useEffect","FetchAPI","then","Loading","svgColor","finally","API_KEY","fetchPopularFilms","axios","response","results","fetchSearchFilmByName","filmName","fetchFilmInfo","movie_id","fetchMovieReviews","fetchMovieCredits","cast"],"sourceRoot":""}